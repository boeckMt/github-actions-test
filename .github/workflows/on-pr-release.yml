name: On pull request - check release

# TODO: check run this workflow only if a certain tag exists and there is no npm version for it published
# git tag -l v0.3.0
# https://github.com/marketplace/actions/github-tag-check
on:
  pull_request:
    # https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#pull_request
    types: [opened, synchronize, reopened, labeled, unlabeled, review_requested]
    branches:
      - main

jobs:
  logevent:
    runs-on: ubuntu-latest
    steps:
      # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      - run: |
          echo "${{ github.event_name }}"
          echo "${{ github.ref }}"
          echo "${{ github.base_ref }}"
          echo "${{ github.head_ref }}"
          echo "${{ github.ref_type }}"
          echo "${{ github.workspace }}"
          echo "--------------------------------------------"
          echo "${{ github.event }}"
          echo "--------------------------------------------"
          echo "${{ toJSON(github.event.pull_request) }}"

  checkTitelTag:
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/checkout@v2
      # needs uses: actions/checkout@ if script/module is required
      - name: checkTitelTag
        uses: actions/github-script@v5
        id: get-tag
        with:
          result-encoding: string
          script: |
            if (context.payload.pull_request && context.payload.pull_request.title) {
              const title = context.payload.pull_request.title;
              const parts = title.split('release-');
              if (parts.length === 2) {
                const versionTag = parts[1];
                core.info(`title contains version ${versionTag}`);

                if(versionTag.startsWith('v')){
                  return versionTag;
                }else{
                  core.setFailed(`Your PR title does not follow the naming convention of the version with "release-v..." ${title}`)
                }
              } else {
                core.setFailed(`Your PR title does not follow the naming convention "release-v[0-9]+.[0-9]+.[0-9]" ${title}`)
              }
            }else{
              core.setFailed(`context.payload does not have a pull_request" ${context.payload}`)
            }
      - name: log output
        run: echo "${{ steps.get-tag.outputs.result }}"
    outputs:
      VERSION_TAG: ${{ steps.get-tag.outputs.result }}

  checkTagOnNpm:
    runs-on: ubuntu-latest
    needs: checkTitelTag
    if: ${{ needs.checkTitelTag.outputs.VERSION_TAG != '' }}
    steps:
      - uses: actions/checkout@v2
      - name: checkout tag
        run: |
          git fetch --all --tags
          git checkout ${{ needs.checkTitelTag.outputs.VERSION_TAG }}
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - run: rm -f .npmrc
      - uses: ./.github/actions/check-tag-on-npm
        with:
          npmPackageName: "@dlr-eoc/core-ui"
          tag: ${{ needs.checkTitelTag.outputs.VERSION_TAG }}

  checkBranch:
    runs-on: ubuntu-latest
    steps:
      - name: checkBranch
        uses: actions/github-script@v5
        with:
          script: |
            // https://github.com/actions/github-script/issues/56#issuecomment-642188313
            // console.log(context.payload.pull_request);
            if(context.payload.pull_request.head){
              const startsWith = context.payload.pull_request.head.ref.startsWith('release-')
              if(!startsWith){
                core.setFailed(`pull_request branch (head_ref) startsWith 'release-' === ${startsWith})
              }
            }else{
              core.setFailed(`context.payload does not have a pull_request" ${context.payload}`);
            }

  build:
    needs: [checkTitelTag, checkTagOnNpm, checkBranch]
    runs-on: ubuntu-latest
    if: ${{ needs.checkTitelTag.outputs.VERSION_TAG != '' }}
    steps:
      - uses: actions/checkout@v2
      - name: checkout tag
        run: |
          git fetch --all --tags
          git checkout ${{ needs.checkTitelTag.outputs.VERSION_TAG }}
      - uses: actions/setup-node@v2
        with:
          cache: 'npm'
          node-version: 15
      - uses: ./.github/actions/build
      - name: Archive dist artifacts
        uses: actions/upload-artifact@v2
        with:
          name: "dist"
          path: dist

  checkLabel:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkLabel
        uses: actions/github-script@v5
        with:
          script: |
            // https://github.com/actions/github-script/issues/56#issuecomment-642188313
            // console.log(context.payload.pull_request);
            if(context.payload.pull_request.labels){
              const hasLabel = context.payload.pull_request.labels.find(i => i.name === 'RELEASE');
              if(!hasLabel){
                core.setFailed(`pull_request hasLabel 'RELEASE' ===  ${hasLabel}`)
              }
            }else{
              core.setFailed(`context.payload does not have a pull_request" ${context.payload}`);
            }

  # create Release on tag push https://github.com/softprops/action-gh-release
  gh-release:
    needs: [checkTitelTag, checkTagOnNpm, checkBranch, build, checkLabel]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: checkout tag
        run: |
          git fetch --all --tags
          git checkout ${{ needs.checkTitelTag.outputs.VERSION_TAG }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.checkTitelTag.outputs.VERSION_TAG }}
