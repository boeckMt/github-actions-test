name: On pull request - check release

# TODO: check run this workflow only if a certain tag exists and there is no npm version for it published
# git tag -l v0.3.0
# https://github.com/marketplace/actions/github-tag-check
on:
  pull_request:
    # https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#pull_request
    types: [opened, synchronize, reopened, labeled, unlabeled, review_requested]
    branches:
      - main

jobs:
  logevent:
    runs-on: ubuntu-latest
    steps:
      # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      - run: |
          echo "${{ github.event_name }}"
          echo "${{ github.ref }}"
          echo "${{ github.base_ref }}"
          echo "${{ github.head_ref }}"
          echo "${{ github.ref_type }}"
          echo "${{ github.workspace }}"
          echo "--------------------------------------------"
          echo "${{ github.event }}"
          echo "--------------------------------------------"
          echo "${{ toJSON(github.event.pull_request) }}"

  checkTitelTag:
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/checkout@v2
      # needs uses: actions/checkout@ if script/module is required
      - name: checkTitelTag
        uses: actions/github-script@v5
        id: get-tag
        with:
          script: |
            if (context.payload.pull_request && context.payload.pull_request.title) {
              const title = context.payload.pull_request.title;
              const parts = title.split('release-');
              if (parts.length === 2) {
                const versionTag = parts[1];
                core.info(`title contains version ${versionTag}`);

                if(versionTag.startsWith('v')){
                  core.setOutput('coreOutput', versionTag);
                  return versionTag;
                }else{
                  core.setFailed(`Your PR title does not follow the naming convention of the version with "release-v..." ${title}`)
                }
              } else {
                core.setFailed(`Your PR title does not follow the naming convention "release-v[0-9]+.[0-9]+.[0-9]" ${title}`)
              }
            }else{
              core.setFailed(`context.payload does not have a pull_request" ${context.payload}`)
            }
      - name: log output
        run: echo "${{ steps.get-tag.outputs.result }}"
      - name: log output2
        run: echo "${{ steps.get-tag.outputs.coreOutput }}"
    outputs:
      VERSION_TAG: ${{ steps.get-tag.outputs.result }}
      VERSION_TAG2: ${{ steps.get-tag.outputs.coreOutput }}
